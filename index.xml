<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>随风潜入夜</title>
    <link>https://microgap.github.io/</link>
    <description>Recent content on 随风潜入夜</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 03 Dec 2019 16:16:31 +0800</lastBuildDate>
    
	<atom:link href="https://microgap.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo布署到Github</title>
      <link>https://microgap.github.io/2019/12/2d72055ed9aa6e2bcfae11059d7c1dd41c511663.html</link>
      <pubDate>Tue, 03 Dec 2019 16:16:31 +0800</pubDate>
      
      <guid>https://microgap.github.io/2019/12/2d72055ed9aa6e2bcfae11059d7c1dd41c511663.html</guid>
      <description>在github新建站点仓库 仓库名称{Username}.github.io, 例:microgap.github.io
 非github付费用户,站点仓库必须是Public类型 更多Github Pages相关内容参考这里  在github新建仓库用于存放Hugo源文件 例: Blog (_此仓库可以是Public,也可以是Private_)  将存放站点源文件的仓库克隆到本地 git clone git@github.com:Microgap/Blog.git &amp;amp;&amp;amp; cd Blog 复制Hugo站点源文件到Blog仓库 检查站点是否正常
hugo server -e m10c #m10c 是配置文件名称,按需修改 站点运行正常后,停止hugo服务,并删除Public文件夹
rm -rf public 将站点仓库作为子模块添加到源文件仓库 git submodule add -b master git@github.com:Microgap/microgap.github.io.git public 新建脚本 deploy.sh 脚本内容
#!/bin/sh  # If a command fails then the deploy stops set -e printf &amp;#34;\033[0;32mDeploying updates to GitHub...\033[0m\n&amp;#34; # Build the project. hugo -e m10c # 此处按需更换使用的配置文件` # Go To Public folder cd public # Add changes to git.</description>
    </item>
    
    <item>
      <title>Hexo使用NexT主题配置评论系统</title>
      <link>https://microgap.github.io/2019/01/3cb9a68dd1b66525171ef0a3eefff6a977f1b4ea.html</link>
      <pubDate>Tue, 22 Jan 2019 15:27:06 +0800</pubDate>
      
      <guid>https://microgap.github.io/2019/01/3cb9a68dd1b66525171ef0a3eefff6a977f1b4ea.html</guid>
      <description>使用next主题，配置评论系统 next内置集成多种评论系统，通过简单的设置即可让网站增加评论功能，目前支持以下几种
# Disqus # Changyan # Valine # LiveRe # Gitment # Gitalk 我这里使用Disqus评论系统，到 https://disqus.com 网站注册账号，然后按提示一步步下来即可，注意申请时的shortname 申请完成后，打开next主题下的_config.yml文件，找到
disqus: enable: false shortname: #填写申请到的shortname count: true lazyload: false 将enable改为true, shortname填上之前申请时生成的shortname，网站的disqus评论功能就可以使用了。
关闭自建page的评论功能 通过上面步骤设置完disqus评论后，发现除了“首页”以及“归档”两个系统自带的模块外，其它自建的页面（如：标签,分类)都可以直行评论，这并不符合实际需求，所以需要单独关闭这些page的评论功能
进入站点的source目录（hexo根目录下的source目录）然后找到对应的page目录，例如categories(分类),打开该目录下的index.md文件，在Front-matter处增加字段comments: false ,该页面的评论功能就被关闭了，以此类推，分别修改所有自建page即可
title: 分类 date: 2019-01-22 12:31:13 type: categories comments: false 修改scaffolds文件夹下的page.md文件 修改scaffolds文件夹下的page.md文件，添加comments: false，这样以后所有新建的page默认都是关闭评论功能</description>
    </item>
    
  </channel>
</rss>